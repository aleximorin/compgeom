- install gmsh instead of triangles
 - look into order of element
 - look into how properties/conductivity is taken care of with gmsh
 - extracting nodes for every named boundary?
 - wrapper for gmsh object?

- rename Matrix.py to routines.py or something more general/specific, fe_engine.py for example

- how to call certain variables of the mesh object with documentation

- Triangle object, find a way to add factorization
 - minimize repeating code
 - have triangle herit from more general Element class
 - daughter class for linear or quadratic elements
 - daughter class has gradN and N
 - mother class has wrapper for computing jacobians and stuff
 - add the Mapx function to the triangle object
 - change the Element object to not have assigned coordinates

- abc abstract decorator
- change the np.kron to something simpler 

- sparse matrix, look into how i can get a simple reference

- make the check for the segment element integration, test for simple element p*a/2 (where a is area)

- translate the exercises as notebooks

1. add gmsh 
2. add axisymmetry
3. refactoring the code 
	
